package leetcodeanswer;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class _60µÚk¸öÅÅÁĞ {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int n = 3, k = 3;
		Solution60 sl = new Solution60();
		System.out.println(sl.getPermutation(n, k));

	}
}

class Solution60 {

	List<Integer> str = new LinkedList<Integer>();
//	int k;
//	int n;
	boolean flag=false;
	StringBuilder ans = new StringBuilder();

	public String getPermutation(int n, int k) {
//		this.k = k;
//		this.n = n;
		for (int i = 1; i <= n; i++) {
			str.add(i);
		}
		backtrack(n);

		return ans.toString();
	}

	public void backtrack(int n) {
		if (n==0) {
			k--;
			if (k==0) {
				flag=true;
//				System.out.println(ans+"ans");
			}
			return;
		}
		for (int i = 1; i <= n; i++) {
			int temp=str.get(i-1);
			ans.append(temp);
			str.remove(i-1);
			n--;
			backtrack(n);
			if(flag) return;
			n++;
			ans.deleteCharAt(ans.length() - 1);
			str.add(i - 1, temp);

		}

	}

}