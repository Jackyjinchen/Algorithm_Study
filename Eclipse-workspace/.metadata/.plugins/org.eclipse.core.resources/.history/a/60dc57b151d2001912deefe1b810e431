package leetcodeanswer;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class _60µÚk¸öÅÅÁĞ {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int n = 3, k = 3;
		Solution60 sl = new Solution60();
		System.out.println(sl.getPermutation(n, k));

	}

}

class Solution60 {

	List<Integer> str = new LinkedList<Integer>();
	int countk = 0;
	int countn = 1;
	int k;
	int n;
	StringBuilder ans = new StringBuilder();

	public String getPermutation(int n, int k) {
		this.k = k;
		this.n = n;
		for (int i = 1; i <= n; i++) {
			str.add(i);
		}
		backtrack(0, countk);

		return "";
	}

	public void backtrack(int countn, int countk) {
		System.out.println("backtrack");
		if (countn == n) {
			if (countk == k) {
				System.out.println("find");
				return;
			}
//			countk++;
		}
		for (int i = countn; i <= n; i++) {

			ans.append(i);
			System.out.println(ans);
			backtrack(countn, countk);


		}

	}

}