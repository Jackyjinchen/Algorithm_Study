class Solution {
	public String convert(String s, int numRows) {
		if (numRows==1) return s;
		char[][] matrix = new char[numRows][s.length() / (2*numRows-2) * (numRows - 1)+s.length()%(2*numRows-2)-numRows+2];
		int[][] ix = new int[numRows][s.length() / (2*numRows-2) * (numRows - 1)+s.length()%(2*numRows-2)-numRows+2];
		int index = 0;
		int pointer = 0;
		while (index < s.length()) {
			for (int i = 0; i < numRows; i++) {
				matrix[i][pointer] = s.charAt(index);
				ix[i][pointer] = 1;
				index++;
				if (index == s.length())
					break;
			}
			pointer++;
			if (index == s.length())
				break;
			for (int i = numRows - 2; i > 0; i--, pointer++) {
				matrix[i][pointer] = s.charAt(index);
				ix[i][pointer] = 1;
				index++;
				if (index == s.length())
					break;
			}

		}
		StringBuilder sBuilder = new StringBuilder();
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[0].length; j++) {
				if (ix[i][j] == 1) {
					sBuilder.append(matrix[i][j]);
				}
			}
		}
		System.out.println(sBuilder.toString());
//
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[0].length; j++) {
				System.out.print(matrix[i][j] + " ");
			}
			System.out.println();
		}

		return sBuilder.toString();
	}
}